{
  "bits": 64,
  "magic": 4277009103,
  "cpu": {
    "type": "x86_64",
    "subtype": "all",
    "endian": "le"
  },
  "filetype": "dylib",
  "ncmds": 19,
  "sizeofcmds": 4384,
  "flags": {
    "noundefs": true,
    "dyldlink": true,
    "twolevel": true,
    "binds_to_weak": true,
    "reexported_dylibs": true,
    "undefined": true
  },
  "cmds": [
    {
      "type": "segment_64",
      "name": "__TEXT",
      "vmaddr": 0,
      "vmsize": 3612672,
      "fileoff": 32,
      "filesize": 3612672,
      "maxprot": {
        "read": true,
        "write": true,
        "exec": true
      },
      "initprot": {
        "read": true,
        "write": false,
        "exec": true
      },
      "nsects": 21,
      "flags": {},
      "sections": [
        {
          "sectname": "__text",
          "segname": "__TEXT",
          "size": 3305354,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "pure_instructions": true
            },
            "sys": {
              "some_instructions": true
            }
          }
        },
        {
          "sectname": "__stubs",
          "segname": "__TEXT",
          "size": 1380,
          "align": 1,
          "reloff": 0,
          "nreloc": 0,
          "type": "symbol_stubs",
          "attributes": {
            "usr": {
              "pure_instructions": true
            },
            "sys": {
              "some_instructions": true
            }
          }
        },
        {
          "sectname": "__stub_helper",
          "segname": "__TEXT",
          "size": 2276,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "pure_instructions": true
            },
            "sys": {
              "some_instructions": true
            }
          }
        },
        {
          "sectname": "__const",
          "segname": "__TEXT",
          "size": 80278,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__cstring",
          "segname": "__TEXT",
          "size": 43512,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "cstring_literals",
          "attributes": {
            "usr": {},
            "sys": {}
          },
          "data": [
            "",
            "\n  (limiting diagnostic text at 128KB)",
            "\n  depends on ",
            "\nAborting!\n",
            " ",
            " #",
            " & ",
            " (0x%lx).\n",
            " -> ",
            " : ",
            " <",
            " == ",
            " and ",
            " and conformance ",
            " as ",
            " because it is outside the representable range",
            " dispatching to ",
            " empty-list ",
            " first-element-marker ",
            " for ",
            " in ",
            " in conformance ",
            " infix",
            " key/value pairs",
            " of ",
            " operator for ",
            " postfix",
            " prefix",
            " throws",
            " throws ",
            " to ",
            " value cannot be converted to ",
            " value witness for ",
            " variadic-marker ",
            " where ",
            " with ",
            " with a lowerBound (",
            " with unmangled suffix ",
            " }",
            "!",
            "#",
            "$%lx",
            "$S",
            "$s",
            "% is not available.",
            "%*s",
            "%-4u %-34s 0x%0.16lx %s + %td\n",
            "%.*s",
            "%.*s: %.*s",
            "%.*s: %.*s\n",
            "%.*s: %.*s%sfile %.*s, line %u\n",
            "%.*s: %u: %u: Fatal error: Use of unimplemented initializer '%.*s' for class '%.*s'\n",
            "%.*s: file %.*s, line %u, column %u \n",
            "%= is not available.",
            "%d",
            "%llX",
            "%lld",
            "%llu",
            "%s",
            "%s ",
            "%s%s",
            "%s%snan",
            "%s%snan(0x%llx)",
            "%s%snan(0x%x)",
            "%s(%p): cyclic metadata dependency detected, aborting\n",
            "%s.\n",
            "%s:\n",
            "%s`%s + %td",
            "& @/= >    <*!|+?%-~   ^ .",
            "& @/= >    <*!|+?%-~   ^ .",
            "'",
            "' for ",
            "' were found in a Dictionary.\nThis usually means either that the type violates Hashable's requirements, or\nthat members of such a dictionary were mutated after insertion.",
            "' were found in a Set.\nThis usually means either that the type violates Hashable's requirements, or\nthat members of such a set were mutated after insertion.",
            "'%s' failed with error '%s'(%d)\n",
            "'outputBuffer' is passed but the size is 'nullptr'.",
            "'try!' expression unexpectedly raised an error: ",
            "(",
            "(ErrorType Object)",
            "(Existential Metatype)",
            "(Existential)",
            "(Foreign Class)",
            "(Function)",
            "(Heap Generic Local Variable)",
            "(Heap Local Variable)",
            "(Objective-C Class Wrapper)",
            "(Opaque Value)",
            "(Tuple)",
            "(Unknown)",
            "(_:)",
            "(extension in ",
            "(in ",
            ")",
            ") -> (",
            ") greater than upperBound (",
            ") of ",
            "):",
            "*** %s:%zu:%zu: %s; add explicit '@objc' to the declaration to emit the Objective-C entrypoint in Swift 4 and suppress this message\n",
            ", ",
            ", Argument Types : [",
            "-",
            "-0.0",
            "-inf",
            ".",
            ".%ld",
            ".(unknown context at ",
            "...",
            ".Protocol",
            ".Type",
            "/BuildRoot/Library/Caches/com.apple.xbs/Binaries/swiftlang/install/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/Codable.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Binaries/swiftlang/install/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/ExistentialCollection.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Binaries/swiftlang/install/TempContent/Objects/BNI_assert_lightweight/swift-macosx-x86_64/stdlib/public/core/8/FloatingPointTypes.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/ArrayBuffer.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/ContiguousArrayBuffer.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/Dictionary.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/ErrorType.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/Integers.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/KeyPath.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/NativeDictionary.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/Range.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/ReflectionMirror.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/SIMDVector.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/SliceBuffer.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/Sort.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringGuts.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringLegacy.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringNormalization.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringRangeReplaceableCollection.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringStorage.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringTesting.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringUTF16View.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringUTF8View.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/StringUnicodeScalarView.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/SwiftNativeNSArray.swift",
            "/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1001.0.82.4/swift/stdlib/public/core/UnicodeScalarProperties.swift",
            "/System/Library/CoreServices/SystemVersion.plist",
            "00",
            "1",
            "1 key/value pair",
            "32-bit: Unimplemented for UTF-8 support",
            ":",
            ": ",
            "<",
            "<%@ %p depth = %u>",
            "<<< invalid type >>>",
            "<ERROR TYPE>",
            "<associated-conformance-descriptor>",
            "<associated-type-descriptor>",
            "<base-conformance-descriptor>",
            "<base-witness-table-accessor>",
            "<corruption> of ",
            "<curry-thunk>",
            "<default-associated-conformance-descriptor>",
            "<default-associated-type-metadata-accessor>",
            "<dispatch-thunk>",
            "<empty>",
            "<first>",
            "<method-descriptor>",
            "<method-lookup-function>",
            "<objc-metadata-update-function>",
            "<protocol-requirements-base-descriptor>",
            "<unavailable>",
            "<unknown>",
            "<unknown>.\n",
            ">",
            "> of ",
            "><",
            "?",
            "@",
            "@\"<_TtPs13_NSEnumerator_>\"16@0:8",
            "@16@0:8",
            "@24@0:8@16",
            "@24@0:8^v16",
            "@24@0:8q16",
            "@32@0:8r^@16q24",
            "@40@0:8r^@16^v24q32",
            "@autoclosure ",
            "@autoreleased",
            "@box ",
            "@callee_guaranteed",
            "@callee_owned",
            "@callee_unowned",
            "@convention(block)",
            "@convention(block) ",
            "@convention(c)",
            "@convention(c) ",
            "@convention(closure)",
            "@convention(method)",
            "@convention(objc_method)",
            "@convention(thin)",
            "@convention(thin) ",
            "@convention(witness_method)",
            "@deallocating",
            "@error ",
            "@escaping",
            "@guaranteed",
            "@in",
            "@in_constant",
            "@in_guaranteed",
            "@inout",
            "@inout_aliasable",
            "@nonobjc ",
            "@objc ",
            "@objc_metatype",
            "@out",
            "@owned",
            "@thick",
            "@thin",
            "@unowned",
            "@unowned_inner_pointer",
            "A",
            "Advancing past end index",
            "Advancing past start index",
            "Allocation failed",
            "Any",
            "AnyObject",
            "Arg[",
            "Array",
            "Array index is out of range",
            "Array index out of range",
            "Array replace: subrange extends past the end",
            "Array replace: subrange start is negative",
            "Array withUnsafeMutableBufferPointer: replacing the buffer is not allowed",
            "ArraySlice index is out of range",
            "ArraySlice index is out of range (before startIndex)",
            "ArraySlice replace: subrange extends past the end",
            "ArraySlice replace: subrange start is before the startIndex",
            "ArraySlice withUnsafeMutableBufferPointer: replacing the buffer is not allowed",
            "Assertion failed",
            "Attempt to access endIndex",
            "Attempt to copy contents into nil buffer pointer",
            "Attempt to copy string contents into nil buffer pointer",
            "Attempting to access Collection elements using an invalid Index",
            "Attempting to access Dictionary elements using an invalid index",
            "Attempting to access Set elements using an invalid index",
            "Attempting to move out of a copy-on-write existential",
            "AutoreleasingUnsafeMutablePointer",
            "BB",
            "BO",
            "Base index types differ",
            "Bb",
            "Bf128_",
            "Bf16_",
            "Bf32_",
            "Bf32_Bv16_",
            "Bf32_Bv2_",
            "Bf32_Bv32_",
            "Bf32_Bv3_",
            "Bf32_Bv4_",
            "Bf32_Bv64_",
            "Bf32_Bv8_",
            "Bf64_",
            "Bf64_Bv16_",
            "Bf64_Bv2_",
            "Bf64_Bv32_",
            "Bf64_Bv3_",
            "Bf64_Bv4_",
            "Bf64_Bv64_",
            "Bf64_Bv8_",
            "Bf80_",
            "Bi128_",
            "Bi16_",
            "Bi16_Bv16_",
            "Bi16_Bv2_",
            "Bi16_Bv32_",
            "Bi16_Bv3_",
            "Bi16_Bv4_",
            "Bi16_Bv64_",
            "Bi16_Bv8_",
            "Bi1_",
            "Bi256_",
            "Bi32_",
            "Bi32_Bv16_",
            "Bi32_Bv2_",
            "Bi32_Bv32_",
            "Bi32_Bv3_",
            "Bi32_Bv4_",
            "Bi32_Bv64_",
            "Bi32_Bv8_",
            "Bi512_",
            "Bi63_",
            "Bi64_",
            "Bi64_Bv16_",
            "Bi64_Bv2_",
            "Bi64_Bv32_",
            "Bi64_Bv3_",
            "Bi64_Bv4_",
            "Bi64_Bv64_",
            "Bi64_Bv8_",
            "Bi7_",
            "Bi8_",
            "Bi8_Bv16_",
            "Bi8_Bv2_",
            "Bi8_Bv32_",
            "Bi8_Bv3_",
            "Bi8_Bv4_",
            "Bi8_Bv64_",
            "Bi8_Bv8_",
            "BidirectionalCollection",
            "BinaryFloatingPoint",
            "BinaryInteger",
            "Bo",
            "Bool",
            "Bp",
            "Bridging did not preserve equality",
            "Builtin.BridgeObject",
            "Builtin.FPIEEE128",
            "Builtin.FPIEEE16",
            "Builtin.FPIEEE32",
            "Builtin.FPIEEE64",
            "Builtin.FPIEEE80",
            "Builtin.Float",
            "Builtin.Float",
            "Builtin.Int",
            "Builtin.Int",
            "Builtin.Int1",
            "Builtin.Int128",
            "Builtin.Int16",
            "Builtin.Int256",
            "Builtin.Int32",
            "Builtin.Int512",
            "Builtin.Int63",
            "Builtin.Int64",
            "Builtin.Int7",
            "Builtin.Int8",
            "Builtin.NativeObject",
            "Builtin.RawPointer",
            "Builtin.SILToken",
            "Builtin.UnknownObject",
            "Builtin.UnsafeValueBuffer",
            "Builtin.Vec",
            "Builtin.Vec",
            "Builtin.Vec16xFPIEEE32",
            "Builtin.Vec16xFPIEEE64",
            "Builtin.Vec16xInt16",
            "Builtin.Vec16xInt32",
            "Builtin.Vec16xInt64",
            "Builtin.Vec16xInt8",
            "Builtin.Vec2xFPIEEE32",
            "Builtin.Vec2xFPIEEE64",
            "Builtin.Vec2xInt16",
            "Builtin.Vec2xInt32",
            "Builtin.Vec2xInt64",
            "Builtin.Vec2xInt8",
            "Builtin.Vec32xFPIEEE32",
            "Builtin.Vec32xFPIEEE64",
            "Builtin.Vec32xInt16",
            "Builtin.Vec32xInt32",
            "Builtin.Vec32xInt64",
            "Builtin.Vec32xInt8",
            "Builtin.Vec3xFPIEEE32",
            "Builtin.Vec3xFPIEEE64",
            "Builtin.Vec3xInt16",
            "Builtin.Vec3xInt32",
            "Builtin.Vec3xInt64",
            "Builtin.Vec3xInt8",
            "Builtin.Vec4xFPIEEE32",
            "Builtin.Vec4xFPIEEE64",
            "Builtin.Vec4xInt16",
            "Builtin.Vec4xInt32",
            "Builtin.Vec4xInt64",
            "Builtin.Vec4xInt8",
            "Builtin.Vec64xFPIEEE32",
            "Builtin.Vec64xFPIEEE64",
            "Builtin.Vec64xInt16",
            "Builtin.Vec64xInt32",
            "Builtin.Vec64xInt64",
            "Builtin.Vec64xInt8",
            "Builtin.Vec8xFPIEEE32",
            "Builtin.Vec8xFPIEEE64",
            "Builtin.Vec8xInt16",
            "Builtin.Vec8xInt32",
            "Builtin.Vec8xInt64",
            "Builtin.Vec8xInt8",
            "Builtin.Word",
            "Bv",
            "Bw",
            "C",
            "CO",
            "CP",
            "Can't add more members than promised",
            "Can't advance past endIndex",
            "Can't compare indices belonging to different collections",
            "Can't construct Array with count < 0",
            "Can't construct ArraySlice with count < 0",
            "Can't construct ContiguousArray with count < 0",
            "Can't drop a negative number of elements from a collection",
            "Can't drop a negative number of elements from a sequence",
            "Can't form Range with upperBound < lowerBound",
            "Can't form a Character from a String containing more than one extended grapheme cluster",
            "Can't form a Character from an empty String",
            "Can't form an empty closed range",
            "Can't get random value with an empty range",
            "Can't move before startIndex",
            "Can't remove first element from an empty collection",
            "Can't remove from an empty collection",
            "Can't remove items from an empty collection",
            "Can't remove last element from an empty collection",
            "Can't remove more items from a collection than it contains",
            "Can't remove more items from a collection than it has",
            "Can't removeFirst from an empty Set",
            "Can't removeLast from an empty Array",
            "Can't removeLast from an empty ArraySlice",
            "Can't removeLast from an empty ContiguousArray",
            "Can't retreat before startIndex",
            "Can't take a prefix of negative length",
            "Can't take a prefix of negative length from a collection",
            "Can't take a suffix of negative length from a collection",
            "Can't take a suffix of negative length from a sequence",
            "Can't unsafeBitCast between types of different sizes",
            "Cannot decrement an invalid index",
            "Cannot decrement beyond startIndex",
            "Cannot get children of Objective-C objects.",
            "Cannot increment an invalid index",
            "Cannot increment beyond endIndex",
            "Cannot initialize ",
            "Cannot replace a slice of a MutableCollection with a slice of a larger size",
            "Cannot replace a slice of a MutableCollection with a slice of a smaller size",
            "Cb",
            "Cc",
            "Character",
            "Class",
            "ClosedRange",
            "Closure Propagated",
            "Closure has escaped",
            "Cm",
            "Code point value does not fit into ASCII",
            "Collection",
            "CollectionOfOne can't be resized",
            "CollectionOfOne(",
            "Comparable",
            "Comparing indexes from different dictionaries",
            "Comparing indexes from different sets",
            "Concrete conformances aren't in the old mangling",
            "Conformance lists aren't in the old mangling",
            "Constant Propagated Float",
            "Constant Propagated Function",
            "Constant Propagated Global",
            "Constant Propagated Integer",
            "Constant Propagated String",
            "ContiguousArray index is out of range",
            "ContiguousArray replace: subrange extends past the end",
            "ContiguousArray replace: subrange start is negative",
            "ContiguousArray withUnsafeMutableBufferPointer: replacing the buffer is not allowed",
            "Could not allocate memory.",
            "Could not cast value of type '%s' (%p) to '%s' (%p)%s%s\n",
            "Cp",
            "Current access (a %s) started at",
            "Current stack trace:\n",
            "Cw",
            "D",
            "Dead",
            "Decodable",
            "DefaultIndices",
            "Dependent associated conformances aren't in the old mangling",
            "Dependent conformances aren't in the old mangling",
            "Dictionary",
            "Dictionary literal contains duplicate keys",
            "Dictionary.Values",
            "Didn't complete final merge",
            "Distance is not representable in Int",
            "Division by zero",
            "Division by zero in remainder operation",
            "Division results in an overflow",
            "Division results in an overflow in remainder operation",
            "Double",
            "Double value cannot be converted to Int because it is either infinite or NaN",
            "Double value cannot be converted to Int because the result would be greater than Int.max",
            "Double value cannot be converted to Int because the result would be less than Int.min",
            "Double value cannot be converted to Int16 because it is either infinite or NaN",
            "Double value cannot be converted to Int16 because the result would be greater than Int16.max",
            "Double value cannot be converted to Int16 because the result would be less than Int16.min",
            "Double value cannot be converted to Int32 because it is either infinite or NaN",
            "Double value cannot be converted to Int32 because the result would be greater than Int32.max",
            "Double value cannot be converted to Int32 because the result would be less than Int32.min",
            "Double value cannot be converted to Int64 because it is either infinite or NaN",
            "Double value cannot be converted to Int64 because the result would be greater than Int64.max",
            "Double value cannot be converted to Int64 because the result would be less than Int64.min",
            "Double value cannot be converted to Int8 because it is either infinite or NaN",
            "Double value cannot be converted to Int8 because the result would be greater than Int8.max",
            "Double value cannot be converted to Int8 because the result would be less than Int8.min",
            "Double value cannot be converted to UInt because it is either infinite or NaN",
            "Double value cannot be converted to UInt because the result would be greater than UInt.max",
            "Double value cannot be converted to UInt because the result would be less than UInt.min",
            "Double value cannot be converted to UInt16 because it is either infinite or NaN",
            "Double value cannot be converted to UInt16 because the result would be greater than UInt16.max",
            "Double value cannot be converted to UInt16 because the result would be less than UInt16.min",
            "Double value cannot be converted to UInt32 because it is either infinite or NaN",
            "Double value cannot be converted to UInt32 because the result would be greater than UInt32.max",
            "Double value cannot be converted to UInt32 because the result would be less than UInt32.min",
            "Double value cannot be converted to UInt64 because it is either infinite or NaN",
            "Double value cannot be converted to UInt64 because the result would be greater than UInt64.max",
            "Double value cannot be converted to UInt64 because the result would be less than UInt64.min",
            "Double value cannot be converted to UInt8 because it is either infinite or NaN",
            "Double value cannot be converted to UInt8 because the result would be greater than UInt8.max",
            "Double value cannot be converted to UInt8 because the result would be less than UInt8.min",
            "Down-casted Array element failed to match the target type\nExpected ",
            "Duplicate elements of type '",
            "Duplicate keys of type '",
            "Duplicate values for key: '",
            "E",
            "EAGAIN",
            "EBUSY",
            "EDEADLK",
            "EINVAL",
            "ENOMEM",
            "EPERM",
            "ERR",
            "EmptyCollection can't advance indices",
            "Encodable",
            "Enum",
            "Equatable",
            "Error raised at top level: ",
            "ErrorObject",
            "Existential",
            "Existential To Protocol Constrained Generic",
            "ExistentialMetatype",
            "Expected Int key but found String key instead.",
            "Expected collection of key-value pairs; encountered odd-length array instead.",
            "Expected vector with exactly ",
            "Exploded",
            "F",
            "Fatal access conflict detected.\n",
            "Fatal error",
            "Fatal error: Attempted to read an unowned reference but object %p was already deallocated",
            "Fatal error: Attempted to read an unowned reference but the object was already deallocated",
            "Fatal error: Call of deleted method\n",
            "Fatal error: Object was retained too many times",
            "Fatal error: Object's unowned reference was retained too many times",
            "Fatal error: Object's weak reference was retained too many times",
            "Fatal error: Stack object escaped\n",
            "Fatal error: Use of unimplemented initializer '%.*s' for class '%.*s'\n",
            "Fatal error: trying to disable a dynamic replacement that is already disabled",
            "Fatal error: trying to enable a dynamic replacement that is already enabled",
            "Float",
            "Float value cannot be converted to Int because it is either infinite or NaN",
            "Float value cannot be converted to Int because the result would be greater than Int.max",
            "Float value cannot be converted to Int because the result would be less than Int.min",
            "Float value cannot be converted to Int16 because it is either infinite or NaN",
            "Float value cannot be converted to Int16 because the result would be greater than Int16.max",
            "Float value cannot be converted to Int16 because the result would be less than Int16.min",
            "Float value cannot be converted to Int32 because it is either infinite or NaN",
            "Float value cannot be converted to Int32 because the result would be greater than Int32.max",
            "Float value cannot be converted to Int32 because the result would be less than Int32.min",
            "Float value cannot be converted to Int64 because it is either infinite or NaN",
            "Float value cannot be converted to Int64 because the result would be greater than Int64.max",
            "Float value cannot be converted to Int64 because the result would be less than Int64.min",
            "Float value cannot be converted to Int8 because it is either infinite or NaN",
            "Float value cannot be converted to Int8 because the result would be greater than Int8.max",
            "Float value cannot be converted to Int8 because the result would be less than Int8.min",
            "Float value cannot be converted to UInt because it is either infinite or NaN",
            "Float value cannot be converted to UInt because the result would be greater than UInt.max",
            "Float value cannot be converted to UInt because the result would be less than UInt.min",
            "Float value cannot be converted to UInt16 because it is either infinite or NaN",
            "Float value cannot be converted to UInt16 because the result would be greater than UInt16.max",
            "Float value cannot be converted to UInt16 because the result would be less than UInt16.min",
            "Float value cannot be converted to UInt32 because it is either infinite or NaN",
            "Float value cannot be converted to UInt32 because the result would be greater than UInt32.max",
            "Float value cannot be converted to UInt32 because the result would be less than UInt32.min",
            "Float value cannot be converted to UInt64 because it is either infinite or NaN",
            "Float value cannot be converted to UInt64 because the result would be greater than UInt64.max",
            "Float value cannot be converted to UInt64 because the result would be less than UInt64.min",
            "Float value cannot be converted to UInt8 because it is either infinite or NaN",
            "Float value cannot be converted to UInt8 because the result would be greater than UInt8.max",
            "Float value cannot be converted to UInt8 because the result would be less than UInt8.min",
            "Float80 value cannot be converted to Int because it is either infinite or NaN",
            "Float80 value cannot be converted to Int because the result would be greater than Int.max",
            "Float80 value cannot be converted to Int because the result would be less than Int.min",
            "Float80 value cannot be converted to Int16 because it is either infinite or NaN",
            "Float80 value cannot be converted to Int16 because the result would be greater than Int16.max",
            "Float80 value cannot be converted to Int16 because the result would be less than Int16.min",
            "Float80 value cannot be converted to Int32 because it is either infinite or NaN",
            "Float80 value cannot be converted to Int32 because the result would be greater than Int32.max",
            "Float80 value cannot be converted to Int32 because the result would be less than Int32.min",
            "Float80 value cannot be converted to Int64 because it is either infinite or NaN",
            "Float80 value cannot be converted to Int64 because the result would be greater than Int64.max",
            "Float80 value cannot be converted to Int64 because the result would be less than Int64.min",
            "Float80 value cannot be converted to Int8 because it is either infinite or NaN",
            "Float80 value cannot be converted to Int8 because the result would be greater than Int8.max",
            "Float80 value cannot be converted to Int8 because the result would be less than Int8.min",
            "Float80 value cannot be converted to UInt because it is either infinite or NaN",
            "Float80 value cannot be converted to UInt because the result would be greater than UInt.max",
            "Float80 value cannot be converted to UInt because the result would be less than UInt.min",
            "Float80 value cannot be converted to UInt16 because it is either infinite or NaN",
            "Float80 value cannot be converted to UInt16 because the result would be greater than UInt16.max",
            "Float80 value cannot be converted to UInt16 because the result would be less than UInt16.min",
            "Float80 value cannot be converted to UInt32 because it is either infinite or NaN",
            "Float80 value cannot be converted to UInt32 because the result would be greater than UInt32.max",
            "Float80 value cannot be converted to UInt32 because the result would be less than UInt32.min",
            "Float80 value cannot be converted to UInt64 because it is either infinite or NaN",
            "Float80 value cannot be converted to UInt64 because the result would be greater than UInt64.max",
            "Float80 value cannot be converted to UInt64 because the result would be less than UInt64.min",
            "Float80 value cannot be converted to UInt8 because it is either infinite or NaN",
            "Float80 value cannot be converted to UInt8 because the result would be greater than UInt8.max",
            "Float80 value cannot be converted to UInt8 because the result would be less than UInt8.min",
            "FloatingPoint",
            "ForeignClass",
            "ForeignMetadataCache",
            "From must be startIndex (or endIndex)",
            "Function",
            "G",
            "GenericCache",
            "Guaranteed To Owned",
            "HA",
            "HC",
            "HD",
            "HI",
            "HP",
            "Hash table has no holes",
            "Hashable",
            "HeapGenericLocalVariable",
            "HeapLocalVariable",
            "Hp",
            "ImplicitlyUnwrappedOptional",
            "Incrementing past end index",
            "Incrementing past start index",
            "Index out of bounds",
            "Index out of range",
            "Index type mismatch!",
            "Initialized count set to greater than specified capacity.",
            "Insufficient space allocated to copy array contents",
            "Insufficient space allocated to copy string contents",
            "Int",
            "Invalid count",
            "Invalid fast enumeration state",
            "Invalid index",
            "Invalid index passed to index(after:)",
            "IteratorProtocol",
            "L",
            "LL",
            "Ll",
            "M",
            "MA",
            "MB",
            "MC",
            "MF",
            "MI",
            "ML",
            "MP",
            "MRa",
            "MRb",
            "MRc",
            "MRf",
            "MS",
            "MU",
            "MV",
            "MXA",
            "MXE",
            "MXM",
            "MXX",
            "MXY",
            "Ma",
            "ManagedBufferPointer buffer class has illegal stored properties",
            "ManagedBufferPointer buffer class must be non-@objc",
            "ManagedBufferPointer must have non-negative capacity",
            "Mc",
            "Metatype",
            "Metatypes have no children.",
            "Method must be overridden",
            "Mf",
            "Mi",
            "Ml",
            "Mm",
            "Mn",
            "Mo",
            "Mp",
            "Mr",
            "Mu",
            "Must take zero or more splits",
            "MutableCollection",
            "N",
            "NSArray element failed to match the Swift Array Element type\nExpected ",
            "NSAttributedString",
            "NSBitmapImageRep",
            "NSCocoaErrorDomain",
            "NSDebugDescription",
            "NSUnderlyingError",
            "NaN payload is not encodable.",
            "Negative Array index is out of range",
            "Negative ContiguousArray index is out of range",
            "Negative count not allowed",
            "Negative value is not representable",
            "Negative word index",
            "Not a storage node",
            "Not an abstract storage node",
            "Not contiguous UTF-16",
            "Not enough bits to represent a signed value",
            "Not enough bits to represent the passed value",
            "Not enough elements in sequence.",
            "Number of elements to remove should be non-negative",
            "Numeric",
            "O",
            "ObjC metadata update function for ",
            "ObjCClassWrapper",
            "ObjectIdentifier",
            "ObjectIdentifier(",
            "Old-fashioned vtable thunk in new mangling format",
            "Only 'flags' value of '0' is currently supported.",
            "Only BidirectionalCollections can be advanced by a negative amount",
            "Only BidirectionalCollections can have end come before start",
            "Opaque",
            "Opaque types have no children.",
            "Operation results in an invalid index",
            "Optional",
            "Out of bounds: index < startIndex",
            "Out of bounds: index > endIndex",
            "Out of bounds: index >= endIndex",
            "Out of bounds: range begins after bounds.upperBound",
            "Out of bounds: range begins before startIndex",
            "Out of bounds: range ends after endIndex",
            "Out of bounds: range ends before bounds.lowerBound",
            "Overflow/underflow",
            "Owned To Guaranteed",
            "P",
            "PA",
            "PA_",
            "PA__T",
            "PAo_",
            "PAo__T",
            "PM",
            "Precondition failed",
            "Previous access (a %s) started at",
            "ProductVersion",
            "Protocol conformance references aren't in the old mangling",
            "Q",
            "Q16@0:8",
            "Qa",
            "R",
            "RB",
            "RC",
            "RL",
            "RM",
            "RP",
            "RQ",
            "RS",
            "RT",
            "Radix must be between 2 and 36",
            "Radix not in range 2...36",
            "RandomAccessCollection",
            "RandomNumberGenerator",
            "Range",
            "Range out of bounds",
            "RangeExpression",
            "RangeReplaceableCollection",
            "RawPointer",
            "RawRepresentable",
            "Rb",
            "Rc",
            "Repetition count should be non-negative",
            "Reserved bits set to an unexpected bit pattern",
            "Retroactive conformances aren't in the old mangling",
            "Rl",
            "Rm",
            "Rp",
            "Rs",
            "Rt",
            "S24@0:8q16",
            "SC",
            "SP",
            "SQ",
            "SR",
            "SS",
            "SV",
            "SWIFT_DEBUG_IMPLICIT_OBJC_ENTRYPOINT",
            "SWIFT_DETERMINISTIC_HASHING",
            "Sa",
            "Sb",
            "Sc",
            "Sd",
            "Self",
            "Sequence",
            "Set",
            "Sf",
            "Sg",
            "Should be overridden in a more specific type",
            "Si",
            "Signature = ",
            "SignedInteger",
            "Simultaneous accesses to 0x%lx, but modification requires exclusive access",
            "SingletonMetadataCache",
            "So",
            "Someone added a conformance to MirrorPath; that privilege is reserved to the standard library",
            "Sp",
            "Sq",
            "Sr",
            "Stack Promoted from Box",
            "StaticString should have Unicode scalar representation",
            "StaticString should have pointer representation",
            "Stride size must not be zero",
            "Strideable",
            "String",
            "String index is out of bounds",
            "String index range is out of bounds",
            "StringProtocol",
            "StringUnicodeScalarView(",
            "Struct",
            "Su",
            "Substring",
            "Sv",
            "Swift mirror lookup failure",
            "Swift mirror subscript bounds check failure",
            "Swift.",
            "Swift._AnyCollectionBox",
            "Swift._BidirectionalCollectionBox",
            "Swift._CollectionBox",
            "Swift._IteratorBox",
            "Swift._RandomAccessCollectionBox",
            "Swift._SequenceBox",
            "Swift.__ContiguousArrayStorageBase",
            "Swift.__EmptyArrayStorage",
            "Swift.__SharedStringStorage",
            "Swift.__StringStorage",
            "Swift.__SwiftDeferredNSArray",
            "T",
            "T#,R",
            "T@\"NSString\",R,C",
            "TA",
            "TC",
            "TD",
            "TG",
            "TH",
            "TI",
            "TK",
            "TL",
            "TM",
            "TN",
            "TO",
            "TP",
            "TQ,N,R",
            "TQ,R",
            "TR",
            "TS",
            "TSf",
            "TSg",
            "TSi",
            "TSr",
            "TV",
            "TW",
            "TX",
            "Ta",
            "Tagbyte values should be 1, 2 or 4.",
            "Tb",
            "Tc",
            "Td",
            "Td,N,R",
            "Te",
            "Tf",
            "Tf,N,R",
            "Tg",
            "Th",
            "The number of members added does not match the promised count",
            "There is no uniform distribution on an infinite range",
            "This copy of libswiftCore.dylib requires an OS version prior to %zd.%zd.%zd.\n",
            "This should never be called",
            "Ti",
            "Tj",
            "Tk",
            "Tl",
            "Tm",
            "Tn",
            "To",
            "To must be endIndex (or startIndex)",
            "Too many elements in sequence.",
            "Tp",
            "Tq",
            "Tq,N,R",
            "Tr",
            "Tr*,N,R",
            "Tt",
            "Tuple",
            "TupleCache",
            "Tv",
            "Tx",
            "U",
            "UInt",
            "UTF8View index range out of bounds",
            "Unable to check API availability: ProductVersion not present in system version dictionary",
            "Unable to check API availability: system version dictionary not found",
            "Unable to talk to ICU",
            "Unexpected error case-converting Unicode scalar.",
            "Unexpected ubrk_open failure",
            "Unexpected ubrk_setUText failure",
            "Unexpected utext_openUChars failure",
            "Unexpected utext_openUTF8 failure",
            "Unexpectedly found nil while implicitly unwrapping an Optional value",
            "Unexpectedly found nil while unwrapping an Optional value",
            "UnicodeScalar",
            "Unkeyed container reached end before value in key-value pair.",
            "Unknown encoding",
            "Unknown general category ",
            "Unknown numeric type ",
            "Unknown raw display style '",
            "Unrecognized selector %c[%s %s]\n",
            "UnsafeBufferPointer",
            "UnsafeBufferPointer has a nil start and nonzero count",
            "UnsafeBufferPointer with negative count",
            "UnsafeMutableBufferPointer",
            "UnsafeMutableBufferPointer has a nil start and nonzero count",
            "UnsafeMutableBufferPointer with negative count",
            "UnsafeMutableBufferPointer.withUnsafeMutableBufferPointer: replacing the buffer is not allowed",
            "UnsafeMutablePointer",
            "UnsafeMutablePointer(0x",
            "UnsafeMutablePointer(nil)",
            "UnsafeMutablePointer.assign with negative count",
            "UnsafeMutablePointer.assign(repeating:count:) with negative count",
            "UnsafeMutablePointer.deinitialize with negative count",
            "UnsafeMutablePointer.initialize overlapping range",
            "UnsafeMutablePointer.initialize with negative count",
            "UnsafeMutablePointer.initialize(repeating:count:): negative count",
            "UnsafeMutablePointer.moveAssign(from:) with negative count",
            "UnsafeMutablePointer.moveInitialize with negative count",
            "UnsafeMutableRawBufferPointer",
            "UnsafeMutableRawBufferPointer has a nil start and nonzero count",
            "UnsafeMutableRawBufferPointer with negative count",
            "UnsafeMutableRawBufferPointer.copyBytes source has too many elements",
            "UnsafeMutableRawBufferPointer.copyMemory source has too many elements",
            "UnsafeMutableRawBufferPointer.load out of bounds",
            "UnsafeMutableRawBufferPointer.load with negative offset",
            "UnsafeMutableRawBufferPointer.storeBytes out of bounds",
            "UnsafeMutableRawBufferPointer.storeBytes with negative offset",
            "UnsafeMutableRawPointer",
            "UnsafeMutableRawPointer(0x",
            "UnsafeMutableRawPointer(nil)",
            "UnsafeMutableRawPointer.copyMemory with negative count",
            "UnsafeMutableRawPointer.initializeMemory overlapping range",
            "UnsafeMutableRawPointer.initializeMemory with negative count",
            "UnsafeMutableRawPointer.initializeMemory: negative count",
            "UnsafeMutableRawPointer.moveInitializeMemory with negative count",
            "UnsafePointer",
            "UnsafePointer(0x",
            "UnsafePointer(nil)",
            "UnsafeRawBufferPointer",
            "UnsafeRawBufferPointer has a nil start and nonzero count",
            "UnsafeRawBufferPointer with negative count",
            "UnsafeRawBufferPointer.load out of bounds",
            "UnsafeRawBufferPointer.load with negative offset",
            "UnsafeRawPointer",
            "UnsafeRawPointer(0x",
            "UnsafeRawPointer(nil)",
            "UnsignedInteger",
            "V",
            "Value Promoted from Box",
            "W",
            "WC",
            "WG",
            "WI",
            "WL",
            "WOb",
            "WOc",
            "WOd",
            "WOe",
            "WOf",
            "WOh",
            "WOr",
            "WOs",
            "WOy",
            "WP",
            "WS",
            "WT",
            "WV",
            "Wa",
            "Wb",
            "Wc",
            "Wd",
            "We",
            "Wf",
            "Wh",
            "Wl",
            "Word index out of range",
            "Wp",
            "Wr",
            "Ws",
            "Wt",
            "Wv",
            "Wy",
            "XA",
            "XB",
            "XC",
            "XD",
            "XE",
            "XF",
            "XK",
            "XM",
            "XPM",
            "XX",
            "XY",
            "XZ",
            "Xb",
            "Xc",
            "Xe",
            "Xf",
            "Xl",
            "Xm",
            "Xo",
            "Xp",
            "Xu",
            "Xw",
            "Xx",
            "Y",
            "[",
            "\\\"",
            "\\0",
            "\\\\",
            "\\n",
            "\\r",
            "\\t",
            "\\x",
            "]",
            "] = ",
            "_",
            "_$S",
            "_$s",
            "_:",
            "_KeyedDecodingContainerBase cannot be used directly.",
            "_KeyedEncodingContainerBase cannot be used directly.",
            "_NativeClass",
            "_NativeRefCountedObject",
            "_RefCountedObject",
            "_T",
            "_T0",
            "_TTS",
            "_Trivial",
            "_TrivialAtMost",
            "_Tt",
            "_TtCVVs10__CocoaSet5Index7Storage",
            "_TtCVVs17__CocoaDictionary5Index7Storage",
            "_TtCVs10__CocoaSet8Iterator",
            "_TtCVs17__CocoaDictionary8Iterator",
            "_TtCs11_AnyKeyPath",
            "_TtCs15__RawSetStorage",
            "_TtCs15__StringStorage",
            "_TtCs15__VaListBuilder",
            "_TtCs18_StringBreadcrumbs",
            "_TtCs18__SwiftNativeNSSet",
            "_TtCs18__stdlib_AtomicInt",
            "_TtCs19__EmptyArrayStorage",
            "_TtCs19__EmptySetSingleton",
            "_TtCs19__SwiftNativeNSData",
            "_TtCs20__BridgingHashBuffer",
            "_TtCs20__SwiftNativeNSArray",
            "_TtCs21__SharedStringStorage",
            "_TtCs21__SwiftNativeNSString",
            "_TtCs22__RawDictionaryStorage",
            "_TtCs22__SwiftDeferredNSArray",
            "_TtCs23__BridgingBufferStorage",
            "_TtCs24__SwiftEmptyNSEnumerator",
            "_TtCs25__SwiftNativeNSDictionary",
            "_TtCs25__SwiftNativeNSEnumerator",
            "_TtCs26__EmptyDictionarySingleton",
            "_TtCs28__ContiguousArrayStorageBase",
            "_TtCs32__stdlib_ReturnAutoreleasedDummy",
            "_TtCs41__SwiftNativeNSArrayWithContiguousStorage",
            "_TtGCs",
            "_TtPs10_NSCopying_",
            "_TtPs10_NSSetCore_",
            "_TtPs12_NSArrayCore_",
            "_TtPs13_NSDictionary_",
            "_TtPs13_NSEnumerator_",
            "_TtPs15_ShadowProtocol_",
            "_TtPs17_NSDictionaryCore_",
            "_TtPs18_NSFastEnumeration_",
            "_TtPs6_NSSet_",
            "_TtPs9_NSNumber_",
            "_UnknownLayout",
            "_UnknownTypeKind",
            "__DATA",
            "__LINKEDIT",
            "__SwiftNativeNSError cannot be instantiated",
            "__SwiftValue cannot be instantiated",
            "__T",
            "__TEXT",
            "__allocating_init",
            "__deallocating_deinit",
            "__ivar_destroyer",
            "__ivar_initializer",
            "__owned ",
            "__shared ",
            "__swift_hooks",
            "_age",
            "_base",
            "_breadcrumbs",
            "_bridgedElements_DoNotUse",
            "_bridgedKeys_DoNotUse",
            "_bridgedValues_DoNotUse",
            "_capacity",
            "_class_getImageName",
            "_count",
            "_countAndFlags",
            "_endIndex",
            "_extra",
            "_fastEnumerationStackBuf",
            "_fastEnumerationState",
            "_hash(into:) called on non-canonical AnyHashable box",
            "_hashValue called on non-canonical AnyHashable box",
            "_heapBufferBridged_DoNotUse",
            "_identityCast to wrong type",
            "_isEqual called on non-canonical AnyHashable box",
            "_kvcKeyPathStringPtr",
            "_n",
            "_nativeStorage",
            "_owner",
            "_rawElements",
            "_rawHashValue(_seed:) called on non-canonical AnyHashable box",
            "_rawKeys",
            "_rawValues",
            "_realCapacityAndFlags",
            "_reservedScale",
            "_scale",
            "_seed",
            "_startIndex",
            "_value",
            "a",
            "aO",
            "aP",
            "add '@objc' to expose this Swift declaration to Objective-C",
            "al",
            "allKeys",
            "allocateBuffer",
            "anonymous descriptor ",
            "ao",
            "ap",
            "argument",
            "argumentSize",
            "assignWithCopy",
            "assignWithTake",
            "associated conformance descriptor for ",
            "associated type descriptor for ",
            "associated type metadata accessor for ",
            "associated type witness table accessor for ",
            "au",
            "bad callee convention",
            "bad demangling tree node",
            "bad directness",
            "bad directness kind",
            "bad impl-function-attribute",
            "bad metatype representation",
            "bad node kind",
            "bad node kind!",
            "bad nominal type kind",
            "bad state",
            "bad value witness kind",
            "base",
            "base conformance descriptor for ",
            "base witness table accessor for ",
            "bridgedElements",
            "bridgedKeys",
            "c",
            "c24@0:8@16",
            "c40@0:8*16q24Q32",
            "ca",
            "cannot handle multi-byte related entities",
            "cl",
            "class metadata base offset for ",
            "closure #",
            "closure argument passed as @noescape to Objective-C has escaped",
            "closure argument was escaped in withoutActuallyEscaping block",
            "completion of ",
            "concrete",
            "concrete protocol conformance ",
            "coroutine continuation prototype for ",
            "could not demangle keypath type from '",
            "couldn't create pthread key for stdlib TLS: %s\n",
            "count",
            "countAndCapacity",
            "cp",
            "cpfl",
            "cpfr",
            "cpg",
            "cpi",
            "cpse",
            "crumbs",
            "curry thunk of ",
            "d",
            "d16@0:8",
            "de",
            "deallocateBuffer",
            "debugDescription",
            "default argument ",
            "default associated conformance accessor for ",
            "default associated type metadata accessor for ",
            "deinit",
            "dependent associated conformance ",
            "dependent associated protocol conformance ",
            "dependent inherited protocol conformance ",
            "dependent root protocol conformance #",
            "description",
            "destroy",
            "destroyArray",
            "destroyBuffer",
            "destructiveInjectEnumTag",
            "destructiveProjectEnumData",
            "didset",
            "direct",
            "dispatch thunk of ",
            "doubleValue",
            "dynamic ",
            "dynamically replaceable key for ",
            "dynamically replaceable thunk for ",
            "dynamically replaceable variable for ",
            "e",
            "endBucket",
            "enum case for ",
            "equality",
            "escaping-closure-violation",
            "et",
            "exclusivity-violation",
            "extension descriptor ",
            "f",
            "f16@0:8",
            "fA",
            "fC",
            "fD",
            "fE",
            "fU",
            "failed to demangle superclass of %s from mangled name '%s'\n",
            "failed to demangle witness for associated type '%s' in conformance '%s: %s' from mangled name '%s'\n",
            "fastestEncoding",
            "fatal error: %s\n",
            "fd",
            "fe",
            "fetching metadata",
            "fi",
            "field offset for ",
            "fl",
            "floatValue",
            "fp",
            "fpRegistersUsed",
            "fr",
            "from ",
            "fu",
            "full type metadata for ",
            "function signature specialization",
            "g",
            "generic not re-abstracted specialization",
            "generic not-reabstracted partial specialization",
            "generic parameter reference for associated type ",
            "generic partial specialization",
            "generic protocol witness table for ",
            "generic specialization",
            "generic type metadata pattern for ",
            "generic witness table at %p contains out-of-bounds requirement descriptor %p\n",
            "getEnumTag",
            "getEnumTagSinglePayload",
            "getExtraInhabitantIndex",
            "getter",
            "gpRegistersUsed",
            "handled inline",
            "handled inline in DependentGenericSignature",
            "hash",
            "header",
            "helper ",
            "i",
            "i_",
            "implicit Objective-C entrypoint %c[%s %s] is deprecated and will be removed in Swift 4",
            "implicit closure #",
            "implicit-objc-entrypoint",
            "index value ",
            "indirect",
            "init",
            "init()",
            "init(_doNotCallMeBase:)",
            "init(_startIndex:endIndex:)",
            "initializeArrayWithCopy",
            "initializeArrayWithTakeBackToFront",
            "initializeArrayWithTakeFrontToBack",
            "initializeBufferWithCopy",
            "initializeBufferWithCopyOfBuffer",
            "initializeBufferWithTake",
            "initializeBufferWithTakeOfBuffer",
            "initializeWithCopy",
            "initializeWithTake",
            "inlined generic function",
            "inout ",
            "inout rules were violated: the array was overwritten",
            "inserted memberAfterInsert ",
            "instance",
            "instantiating class metadata for class with missing weak-linked ancestor",
            "instantiation function for generic protocol witness table for ",
            "insufficient space to accommodate source.underestimatedCount elements",
            "invalid",
            "invalid Collection: count differed in successive traversals",
            "invalid Collection: less than 'count' elements in collection",
            "invalid Collection: more than 'count' elements in collection",
            "invalid bounds for an empty collection",
            "invalid impl convention",
            "invalid range for an empty collection",
            "invalid unsafeDowncast",
            "itemCount",
            "itemIndex",
            "k_",
            "key path getter for ",
            "key path index ",
            "key path setter for ",
            "key value ",
            "lO",
            "label value ",
            "layout of ",
            "lazy cache variable for type metadata for ",
            "lazy protocol witness table accessor for type ",
            "lazy protocol witness table cache variable for type ",
            "length",
            "let ",
            "lo",
            "load from misaligned raw pointer",
            "longLongValue",
            "lower upper ",
            "lp",
            "lu",
            "m",
            "materializeForSet",
            "merged ",
            "metaclass for ",
            "method descriptor for ",
            "method lookup function for ",
            "modification",
            "modify",
            "module descriptor ",
            "moveAssign overlapping range",
            "n_",
            "native",
            "nativeOwningAddressor",
            "nativeOwningMutableAddressor",
            "nativePinningAddressor",
            "nativePinningMutableAddressor",
            "newElements.underestimatedCount was an overestimate",
            "nextBucket",
            "no memory available to initialize from source",
            "no state after Results",
            "nominal type descriptor for ",
            "not a context node",
            "not supported",
            "oP",
            "objCType",
            "objc",
            "offset element ",
            "oi",
            "only class metatypes can be converted to AnyObject",
            "op",
            "option sets should have been handled earlier",
            "out of bounds",
            "outlined assign with copy of ",
            "outlined assign with take of ",
            "outlined bridged method (",
            "outlined consume of ",
            "outlined copy of ",
            "outlined destroy of ",
            "outlined init with copy of ",
            "outlined init with take of ",
            "outlined release of ",
            "outlined retain of ",
            "outlined variable #",
            "override ",
            "owningAddressor",
            "owningMutableAddressor",
            "p",
            "partial apply",
            "partial apply ObjC forwarder",
            "partial apply forwarder",
            "pd",
            "pf",
            "pg",
            "pi",
            "pr",
            "preserving fragile attribute",
            "previous",
            "projectBuffer",
            "property behavior storage of ",
            "property descriptor for ",
            "protocol conformance descriptor for ",
            "protocol conformance ref (protocol's module) ",
            "protocol conformance ref (retroactive) ",
            "protocol conformance ref (type's module) ",
            "protocol descriptor for ",
            "protocol requirements base descriptor for ",
            "protocol self-conformance descriptor for ",
            "protocol self-conformance witness for ",
            "protocol self-conformance witness table for ",
            "protocol symbolic reference 0x",
            "protocol witness for ",
            "protocol witness table accessor for ",
            "protocol witness table for ",
            "protocol witness table pattern for ",
            "ps",
            "pthread_cond_broadcast(&condition)",
            "pthread_cond_destroy(&condition)",
            "pthread_cond_init(&condition, nullptr)",
            "pthread_cond_signal(&condition)",
            "pthread_cond_wait(&condition, &mutex)",
            "pthread_mutex_destroy(&mutex)",
            "pthread_mutex_init(&mutex, &attr)",
            "pthread_mutex_lock(&mutex)",
            "pthread_mutex_trylock(&mutex)",
            "pthread_mutex_unlock(&mutex)",
            "pthread_mutexattr_destroy(&attr)",
            "pthread_mutexattr_init(&attr)",
            "pthread_mutexattr_settype(&attr, kind)",
            "pthread_rwlock_destroy(&rwlock)",
            "pthread_rwlock_init(&rwlock, nullptr)",
            "pthread_rwlock_rdlock(&rwlock)",
            "pthread_rwlock_tryrdlock(&rwlock)",
            "pthread_rwlock_trywrlock(&rwlock)",
            "pthread_rwlock_unlock(&rwlock)",
            "pthread_rwlock_wrlock(&rwlock)",
            "q",
            "q16@0:8",
            "q40@0:8^{?=Q^@^Q[5Q]}16^@24q32",
            "r",
            "r*16@0:8",
            "r*20@0:8c16",
            "r*24@0:8Q16",
            "reabstraction thunk ",
            "read",
            "reflection metadata associated type descriptor ",
            "reflection metadata builtin descriptor ",
            "reflection metadata field descriptor ",
            "reflection metadata superclass descriptor ",
            "related decl '",
            "resilient protocol witness table for ",
            "retroactive @ ",
            "rhs overreported its count",
            "rhs underreported its count",
            "runtime error: unresolvable type metadata dependency cycle detected\n  ",
            "s",
            "self isn't canonical",
            "set",
            "setter",
            "should be part of SILBoxTypeWithLayout",
            "should be printed as a child of a DependentGenericSignature",
            "should not try to mangle a symbolic reference; resolve it to a non-symbolic demangling tree instead",
            "snan",
            "specialized ",
            "st",
            "start",
            "static ",
            "storage",
            "storeBytes to misaligned raw pointer",
            "storeEnumTagSinglePayload",
            "storeExtraInhabitant",
            "subscript",
            "super ",
            "superclass",
            "swapping a location with itself is not supported",
            "swift_errorBridgingInfo_",
            "tT",
            "ta",
            "thunk for ",
            "tk",
            "todo",
            "transitive completion of ",
            "type metadata accessor for ",
            "type metadata completion function for ",
            "type metadata for ",
            "type metadata instantiation cache for ",
            "type metadata instantiation function for ",
            "type metadata singleton initialization cache for ",
            "type symbolic reference 0x",
            "type-metadata-cycle",
            "u",
            "u16",
            "u8",
            "ug",
            "ui",
            "unexpected builtin type",
            "unexpected builtin vector type",
            "unexpected enum case '",
            "unexpected enum case while switching on value of type '",
            "unknown",
            "unowned",
            "unowned(unsafe)",
            "unsafeAddressor",
            "unsafeMutableAddressor",
            "unsafelyUnwrapped of nil optional",
            "unsignedLongLongValue",
            "unsupported",
            "unsupported node",
            "up",
            "upperBound cannot be zero.",
            "utf16Length",
            "v",
            "v32@0:8q16@?24",
            "v40@0:8^@16^@24q32",
            "v40@0:8^@16{?=qq}24",
            "v40@0:8^S16{?=qq}24",
            "value",
            "value type is not bridged to Objective-C",
            "value witness table for ",
            "var ",
            "variable initialization expression",
            "vtable thunk for ",
            "w",
            "warning: the Swift runtime found no field metadata for type '%*s' that claims to be reflectable. Its fields will show up as 'unknown' in Mirrors\n",
            "warning: the Swift runtime was unable to demangle the type of field '%*s'. the mangled type name is '%*s'. this field will show up as an empty tuple in Mirrors\n",
            "weak",
            "willset",
            "wrong dependent member type",
            "wrong metatype representation",
            "xFloat",
            "xInt",
            "xRawPointer",
            "xg",
            "xs",
            "xx",
            "y",
            "z"
          ]
        },
        {
          "sectname": "__swift5_typeref",
          "segname": "__TEXT",
          "size": 30471,
          "align": 1,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_capture",
          "segname": "__TEXT",
          "size": 2760,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_methname",
          "segname": "__TEXT",
          "size": 1582,
          "align": 0,
          "reloff": 0,
          "nreloc": 0,
          "type": "cstring_literals",
          "attributes": {
            "usr": {},
            "sys": {}
          },
          "data": [
            "",
            "UTF8String",
            "_cfTypeID",
            "_copyDescription",
            "_fastCStringContents:",
            "_isDeallocating",
            "_swiftTypeMetadata",
            "_swiftTypeName",
            "_swiftValue",
            "_tryRetain",
            "alloc",
            "allocWithZone:",
            "allowsWeakReference",
            "autorelease",
            "cStringUsingEncoding:",
            "characterAtIndex:",
            "class",
            "classForCoder",
            "code",
            "componentsSeparatedByString:",
            "conformsToProtocol:",
            "copyWithZone:",
            "count",
            "countByEnumeratingWithState:objects:count:",
            "dealloc",
            "debugDescription",
            "debugQuickLookObject",
            "decomposedStringWithCanonicalMapping",
            "depth",
            "description",
            "dictionaryWithContentsOfFile:",
            "dictionaryWithObjects:forKeys:count:",
            "doesNotRecognizeSelector:",
            "domain",
            "doubleValue",
            "enumerateKeysAndObjectsWithOptions:usingBlock:",
            "fastestEncoding",
            "floatValue",
            "getCString:maxLength:encoding:",
            "getCharacters:range:",
            "getObjects:andKeys:count:",
            "getObjects:range:",
            "hash",
            "init",
            "initWithObjects:count:",
            "initWithObjects:forKeys:count:",
            "initialize",
            "instanceMethodForSelector:",
            "instancesRespondToSelector:",
            "integerValue",
            "isEqual:",
            "isEqualToString:",
            "isKindOfClass:",
            "isMemberOfClass:",
            "isNSArray__",
            "isNSCFConstantString__",
            "isNSData__",
            "isNSDate__",
            "isNSDictionary__",
            "isNSNumber__",
            "isNSObject__",
            "isNSOrderedSet__",
            "isNSSet__",
            "isNSString__",
            "isNSTimeZone__",
            "isNSValue__",
            "isProxy",
            "isSubclassOfClass:",
            "isa",
            "keyEnumerator",
            "length",
            "longLongValue",
            "member:",
            "methodForSelector:",
            "nextObject",
            "objCType",
            "objectAtIndex:",
            "objectEnumerator",
            "objectForKey:",
            "operatingSystemVersion",
            "performSelector:",
            "performSelector:withObject:",
            "performSelector:withObject:withObject:",
            "processInfo",
            "refCounts",
            "release",
            "respondsToSelector:",
            "retain",
            "retainCount",
            "retainWeakReference",
            "returnsAutoreleased:",
            "self",
            "stringWithFormat:",
            "stringWithUTF8String:",
            "superclass",
            "unsignedLongLongValue",
            "userInfo",
            "zone"
          ]
        },
        {
          "sectname": "__swift5_reflstr",
          "segname": "__TEXT",
          "size": 5250,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          },
          "data": [
            "",
            "ArrayLiteralElement",
            "BooleanLiteralType",
            "Bound",
            "CodeUnit",
            "Element",
            "Elements",
            "EncodedScalar",
            "Encoding",
            "Exponent",
            "ExtendedGraphemeClusterLiteralType",
            "FloatLiteralType",
            "ForwardParser",
            "Index",
            "Indices",
            "IntegerLiteralType",
            "Iterator",
            "Key",
            "Magnitude",
            "MaskStorage",
            "Pointee",
            "RawExponent",
            "RawSignificand",
            "RawValue",
            "ReverseParser",
            "SIMD16Storage",
            "SIMD2Storage",
            "SIMD32Storage",
            "SIMD4Storage",
            "SIMD64Storage",
            "SIMD8Storage",
            "SIMDMaskScalar",
            "Scalar",
            "Stride",
            "StringInterpolation",
            "StringLiteralType",
            "SubSequence",
            "UTF16View",
            "UTF8View",
            "UnicodeScalarLiteralType",
            "UnicodeScalarView",
            "Value",
            "Words",
            "_Buffer",
            "_ObjectiveCType",
            "_age",
            "_base",
            "_baseHashable",
            "_baseStream1",
            "_baseStream2",
            "_biasedBits",
            "_bitCount",
            "_body",
            "_box",
            "_breadcrumbs",
            "_bridgedElements_DoNotUse",
            "_bridgedKeys_DoNotUse",
            "_bridgedValues_DoNotUse",
            "_buffer",
            "_canonical",
            "_capacity",
            "_capacityAndFlags",
            "_cocoa",
            "_core",
            "_count",
            "_countAndFlags",
            "_countAndFlagsBits",
            "_current",
            "_defaultDescendantRepresentation",
            "_didReturnEnd",
            "_done",
            "_element",
            "_elements",
            "_end",
            "_endIndex",
            "_extra",
            "_fastEnumerationStackBuf",
            "_fastEnumerationState",
            "_flags",
            "_form",
            "_guts",
            "_heapBufferBridged_DoNotUse",
            "_immortal",
            "_impl",
            "_inlineStorage",
            "_inner",
            "_isASCII",
            "_item0",
            "_item1",
            "_item10",
            "_item11",
            "_item12",
            "_item13",
            "_item14",
            "_item15",
            "_item2",
            "_item3",
            "_item4",
            "_item5",
            "_item6",
            "_item7",
            "_item8",
            "_item9",
            "_iterator",
            "_kvcKeyPathStringPtr",
            "_limit",
            "_makeSuperclassMirror",
            "_makeUnderlyingIterator",
            "_maxLength",
            "_native",
            "_nativeBuffer",
            "_nativeStorage",
            "_next",
            "_nextElement",
            "_nextIsTrailingSurrogate",
            "_object",
            "_offset",
            "_offsetRange",
            "_outer",
            "_owner",
            "_position",
            "_predicate",
            "_predicateHasFailed",
            "_raw",
            "_rawBits",
            "_rawElements",
            "_rawKeys",
            "_rawValue",
            "_rawValues",
            "_reachedEnd",
            "_realCapacityAndFlags",
            "_remaining",
            "_requestedCount",
            "_reservedScale",
            "_scalar",
            "_scale",
            "_seed",
            "_separator",
            "_separatorData",
            "_sequence1",
            "_sequence2",
            "_slice",
            "_small",
            "_start",
            "_startIndex",
            "_startPtrOrData",
            "_state",
            "_storage",
            "_str",
            "_stride",
            "_swift3Buffer",
            "_swift3Codec",
            "_target",
            "_transform",
            "_utf8CodeUnitCount",
            "_value",
            "_variant",
            "_x0",
            "_x1",
            "_x10",
            "_x11",
            "_x12",
            "_x13",
            "_x14",
            "_x15",
            "_x16",
            "_x17",
            "_x18",
            "_x19",
            "_x2",
            "_x20",
            "_x21",
            "_x22",
            "_x23",
            "_x24",
            "_x25",
            "_x26",
            "_x27",
            "_x28",
            "_x29",
            "_x3",
            "_x30",
            "_x31",
            "_x32",
            "_x33",
            "_x34",
            "_x35",
            "_x36",
            "_x37",
            "_x38",
            "_x39",
            "_x4",
            "_x40",
            "_x41",
            "_x42",
            "_x43",
            "_x44",
            "_x45",
            "_x46",
            "_x47",
            "_x48",
            "_x49",
            "_x5",
            "_x50",
            "_x51",
            "_x52",
            "_x53",
            "_x54",
            "_x55",
            "_x56",
            "_x57",
            "_x58",
            "_x59",
            "_x6",
            "_x60",
            "_x61",
            "_x62",
            "_x63",
            "_x64",
            "_x65",
            "_x66",
            "_x67",
            "_x68",
            "_x69",
            "_x7",
            "_x70",
            "_x71",
            "_x8",
            "_x9",
            "a",
            "age",
            "allKeys",
            "allocatedBuffers",
            "amountFilled",
            "argument",
            "argumentSize",
            "ascii",
            "attributedString",
            "awayFromZero",
            "b",
            "base",
            "bezierPath",
            "bitOffset",
            "bitset",
            "body",
            "bool",
            "break",
            "bridgedElements",
            "bridgedKeys",
            "bucket",
            "bucketMask",
            "buffer",
            "cachePtr",
            "capability",
            "cases",
            "children",
            "class",
            "closePunctuation",
            "cocoa",
            "codingPath",
            "collection",
            "collectionOfElements",
            "collectionOfPairs",
            "color",
            "computed",
            "concrete",
            "connectorPunctuation",
            "continue",
            "control",
            "count",
            "countAndCapacity",
            "crumbs",
            "currencySymbol",
            "customized",
            "dashPunctuation",
            "data",
            "dataCorrupted",
            "debugDescription",
            "decimal",
            "decimalNumber",
            "destData",
            "dictionary",
            "didChain",
            "digit",
            "displayStyle",
            "double",
            "down",
            "element",
            "elementOfPair",
            "emptyInput",
            "enclosingMark",
            "end",
            "endBucket",
            "endIndexAndFlags",
            "endOfReferencePrefixComponent",
            "enum",
            "equal",
            "error",
            "external",
            "extra",
            "failure",
            "finalPunctuation",
            "float",
            "format",
            "fpRegistersUsed",
            "fp_offset",
            "functionCall",
            "generated",
            "generatingElements",
            "generatingSeparator",
            "genericEnvironment",
            "get",
            "getLayout",
            "gpRegistersUsed",
            "gp_offset",
            "hasReferencePrefix",
            "hashTable",
            "header",
            "icuInput",
            "icuOutput",
            "image",
            "inRange",
            "index",
            "indirectPointer",
            "initialPunctuation",
            "initializer",
            "inline",
            "instance",
            "int",
            "intValue",
            "invalidValue",
            "isASCII",
            "isTrivial",
            "itemCount",
            "itemIndex",
            "itemsPtr",
            "iterator",
            "keyCollision",
            "keyNotFound",
            "kind",
            "leaf",
            "left",
            "less",
            "letterNumber",
            "lineSeparator",
            "lowerBound",
            "lowercaseLetter",
            "mathSymbol",
            "metadata",
            "minus",
            "mirror",
            "modifierLetter",
            "modifierSymbol",
            "mutatingGetSet",
            "mutationsPtr",
            "native",
            "negativeInfinity",
            "negativeNormal",
            "negativeSubnormal",
            "negativeZero",
            "nextBucket",
            "nextReadPosition",
            "none",
            "nonmutatingGetSet",
            "nonspacingMark",
            "notACollection",
            "numeric",
            "object",
            "offset",
            "openPunctuation",
            "optional",
            "optionalChain",
            "optionalForce",
            "optionalWrap",
            "otherLetter",
            "otherNumber",
            "otherPunctuation",
            "otherSymbol",
            "outOfLine",
            "output",
            "overflow_arg_area",
            "owner",
            "p",
            "pair",
            "paragraphSeparator",
            "pastEnd",
            "patternArgs",
            "plus",
            "point",
            "pointer",
            "positiveInfinity",
            "positiveNormal",
            "positiveSubnormal",
            "positiveZero",
            "previous",
            "previousComponentAddr",
            "privateUse",
            "quietNaN",
            "range",
            "rawValue",
            "readOnly",
            "rectangle",
            "refCounts",
            "reference",
            "reg_save_area",
            "remainingCapacity",
            "repeatedValue",
            "resolved",
            "result",
            "right",
            "root",
            "scalarValue",
            "set",
            "shared",
            "signalingNaN",
            "size",
            "some",
            "sound",
            "spaceSeparator",
            "spacingMark",
            "sprite",
            "start",
            "startIndex",
            "state",
            "storage",
            "storedPropertyIndex",
            "stringValue",
            "struct",
            "subjectType",
            "subscriptBaseAddress",
            "success",
            "suppressed",
            "surrogate",
            "tagged",
            "text",
            "titlecaseLetter",
            "toNearestOrAwayFromZero",
            "toNearestOrEven",
            "towardZero",
            "trivial",
            "tuple",
            "typeMismatch",
            "uBreakIterator",
            "uInt",
            "uText",
            "unassigned",
            "underlyingError",
            "unresolvedFieldOffset",
            "unresolvedIndirectOffset",
            "up",
            "upperBound",
            "uppercaseLetter",
            "url",
            "utf16",
            "utf16Length",
            "utf8",
            "v0",
            "v1",
            "v2",
            "v3",
            "v4",
            "v5",
            "v6",
            "v7",
            "valid",
            "value",
            "valueNotFound",
            "view",
            "vtableOffset",
            "witnessSizeAdjustment",
            "witnesses",
            "word",
            "wordCount",
            "wordIndex",
            "words"
          ]
        },
        {
          "sectname": "__swift5_fieldmd",
          "segname": "__TEXT",
          "size": 16600,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_builtin",
          "segname": "__TEXT",
          "size": 2060,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_protos",
          "segname": "__TEXT",
          "size": 404,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_assocty",
          "segname": "__TEXT",
          "size": 19368,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_proto",
          "segname": "__TEXT",
          "size": 4656,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__swift5_types",
          "segname": "__TEXT",
          "size": 1620,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_classname",
          "segname": "__TEXT",
          "size": 271,
          "align": 0,
          "reloff": 0,
          "nreloc": 0,
          "type": "cstring_literals",
          "attributes": {
            "usr": {},
            "sys": {}
          },
          "data": [
            "",
            "NSCopying",
            "NSObject",
            "_TtCs12_SwiftObject",
            "__SwiftNativeNSArrayBase",
            "__SwiftNativeNSDataBase",
            "__SwiftNativeNSDictionaryBase",
            "__SwiftNativeNSEnumeratorBase",
            "__SwiftNativeNSError",
            "__SwiftNativeNSIndexSetBase",
            "__SwiftNativeNSSetBase",
            "__SwiftNativeNSStringBase",
            "__SwiftNull",
            "__SwiftValue"
          ]
        },
        {
          "sectname": "__objc_methtype",
          "segname": "__TEXT",
          "size": 481,
          "align": 0,
          "reloff": 0,
          "nreloc": 0,
          "type": "cstring_literals",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__gcc_except_tab",
          "segname": "__TEXT",
          "size": 240,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__info_plist",
          "segname": "__TEXT",
          "size": 576,
          "align": 0,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__unwind_info",
          "segname": "__TEXT",
          "size": 40880,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__eh_frame",
          "segname": "__TEXT",
          "size": 40712,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        }
      ]
    },
    {
      "type": "segment_64",
      "name": "__DATA",
      "vmaddr": 3612672,
      "vmsize": 327680,
      "fileoff": 1784,
      "filesize": 159744,
      "maxprot": {
        "read": true,
        "write": true,
        "exec": true
      },
      "initprot": {
        "read": true,
        "write": true,
        "exec": false
      },
      "nsects": 22,
      "flags": {
        "highvm": true
      },
      "sections": [
        {
          "sectname": "__nl_symbol_ptr",
          "segname": "__DATA",
          "size": 16,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "non_lazy_symbol_pointers",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__got",
          "segname": "__DATA",
          "size": 384,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "non_lazy_symbol_pointers",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__la_symbol_ptr",
          "segname": "__DATA",
          "size": 1840,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "lazy_symbol_pointers",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__mod_init_func",
          "segname": "__DATA",
          "size": 40,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "mod_init_func_pointers",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__const",
          "segname": "__DATA",
          "size": 72704,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__cfstring",
          "segname": "__DATA",
          "size": 128,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_classlist",
          "segname": "__DATA",
          "size": 296,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_nlclslist",
          "segname": "__DATA",
          "size": 24,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_catlist",
          "segname": "__DATA",
          "size": 24,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_protolist",
          "segname": "__DATA",
          "size": 96,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_imageinfo",
          "segname": "__DATA",
          "size": 8,
          "align": 2,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_const",
          "segname": "__DATA",
          "size": 18656,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_selrefs",
          "segname": "__DATA",
          "size": 344,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "literal_pointers",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_protorefs",
          "segname": "__DATA",
          "size": 80,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_classrefs",
          "segname": "__DATA",
          "size": 72,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_superrefs",
          "segname": "__DATA",
          "size": 8,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {
              "no_dead_strip": true
            },
            "sys": {}
          }
        },
        {
          "sectname": "__objc_ivar",
          "segname": "__DATA",
          "size": 80,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__objc_data",
          "segname": "__DATA",
          "size": 3312,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__data",
          "segname": "__DATA",
          "size": 59600,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__crash_info",
          "segname": "__DATA",
          "size": 64,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "regular",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__bss",
          "segname": "__DATA",
          "size": 166216,
          "align": 4,
          "reloff": 0,
          "nreloc": 0,
          "type": "zerofill",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        },
        {
          "sectname": "__common",
          "segname": "__DATA",
          "size": 48,
          "align": 3,
          "reloff": 0,
          "nreloc": 0,
          "type": "zerofill",
          "attributes": {
            "usr": {},
            "sys": {}
          }
        }
      ]
    },
    {
      "type": "segment_64",
      "name": "__LINKEDIT",
      "vmaddr": 3940352,
      "vmsize": 2715824,
      "fileoff": 3616,
      "filesize": 2683792,
      "maxprot": {
        "read": true,
        "write": true,
        "exec": true
      },
      "initprot": {
        "read": true,
        "write": false,
        "exec": false
      },
      "nsects": 0,
      "flags": {},
      "sections": []
    },
    {
      "type": "id_dylib",
      "name": "@rpath/libswiftCore.dylib",
      "timestamp": 1,
      "current_version": 65601618,
      "compatibility_version": 65536,
      "fileoff": 3688
    },
    {
      "type": "dyld_info",
      "fileoff": 3744
    },
    {
      "type": "symtab",
      "symoff": 4179032,
      "nsyms": 33720,
      "stroff": 4720592,
      "strsize": 1636400,
      "fileoff": 3792
    },
    {
      "type": "dysymtab",
      "ilocalsym": 0,
      "nlocalsym": 20449,
      "iextdefsym": 20449,
      "nextdefsym": 13010,
      "iundefsym": 33459,
      "nundefsym": 261,
      "tocoff": 0,
      "ntoc": 0,
      "modtaboff": 0,
      "nmodtab": 0,
      "extrefsymoff": 0,
      "nextrefsyms": 0,
      "indirectsymoff": 4718552,
      "nindirectsyms": 510,
      "extreloff": 0,
      "nextrel": 0,
      "locreloff": 0,
      "nlocrel": 0,
      "fileoff": 3816
    },
    {
      "type": "uuid",
      "fileoff": 3896
    },
    {
      "type": "version_min_macosx",
      "version": "10.9.0",
      "sdk": "10.14.0",
      "fileoff": 3920
    },
    {
      "type": "source_version",
      "fileoff": 3936
    },
    {
      "type": "load_dylib",
      "name": "/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation",
      "timestamp": 2,
      "current_version": 102895360,
      "compatibility_version": 19660800,
      "fileoff": 3952
    },
    {
      "type": "load_dylib",
      "name": "/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
      "timestamp": 2,
      "current_version": 102895360,
      "compatibility_version": 9830400,
      "fileoff": 4048
    },
    {
      "type": "load_dylib",
      "name": "/usr/lib/libicucore.A.dylib",
      "timestamp": 2,
      "current_version": 4063488,
      "compatibility_version": 65536,
      "fileoff": 4152
    },
    {
      "type": "load_dylib",
      "name": "/usr/lib/libc++.1.dylib",
      "timestamp": 2,
      "current_version": 26216708,
      "compatibility_version": 65536,
      "fileoff": 4208
    },
    {
      "type": "load_dylib",
      "name": "/usr/lib/libSystem.B.dylib",
      "timestamp": 2,
      "current_version": 82115073,
      "compatibility_version": 65536,
      "fileoff": 4256
    },
    {
      "type": "load_dylib",
      "name": "/usr/lib/libobjc.A.dylib",
      "timestamp": 2,
      "current_version": 14942208,
      "compatibility_version": 65536,
      "fileoff": 4312
    },
    {
      "type": "function_starts",
      "dataoff": 4151488,
      "datasize": 26592,
      "fileoff": 4368
    },
    {
      "type": "data_in_code",
      "dataoff": 4178080,
      "datasize": 952,
      "fileoff": 4384
    },
    {
      "type": "code_signature",
      "dataoff": 6356992,
      "datasize": 99216,
      "fileoff": 4400
    }
  ],
  "hsize": 32
}